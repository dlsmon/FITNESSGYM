// <auto-generated />
using System;
using FITNESSGYM.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FITNESSGYM.Migrations.FITNESSGYMDB
{
    [DbContext(typeof(FITNESSGYMDBContext))]
    [Migration("20230125111758_allmodels")]
    partial class allmodels
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FITNESSGYM.Models.Client", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Adresse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Birthdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Diseases")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Freetrial")
                        .HasColumnType("int");

                    b.Property<int?>("Height")
                        .HasColumnType("int");

                    b.Property<string>("Hobbies")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Newsletter")
                        .HasColumnType("int");

                    b.Property<int?>("Phonenumber")
                        .HasColumnType("int");

                    b.Property<int?>("Sex")
                        .HasColumnType("int");

                    b.Property<int?>("Weight")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Client");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Adresse = "Rue du Chateau, 95110 Paris",
                            Birthdate = new DateTime(1996, 5, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Diseases = "None",
                            FirstName = "David",
                            Freetrial = 0,
                            Height = 170,
                            Hobbies = "Danse, volley-ball",
                            IdUser = "david0moniz@hotmail.com",
                            LastName = "Moniz",
                            Newsletter = 0,
                            Phonenumber = 620285591,
                            Sex = 1,
                            Weight = 75
                        },
                        new
                        {
                            ID = 2,
                            Adresse = "Boulevard Central, 95110 Paris",
                            Birthdate = new DateTime(1996, 10, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Diseases = "diabetes",
                            FirstName = "Richy",
                            Freetrial = 1,
                            Height = 170,
                            Hobbies = "Sport",
                            IdUser = "Richy@gmail.com",
                            LastName = "Wiliam",
                            Newsletter = 1,
                            Phonenumber = 633504482,
                            Sex = 1,
                            Weight = 85
                        });
                });

            modelBuilder.Entity("FITNESSGYM.Models.Coach", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("IdSpeciality")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("IdSpeciality");

                    b.ToTable("Coach");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            FirstName = "CEDERIC",
                            IdSpeciality = 1,
                            LastName = "O",
                            Photo = "/Assets/Images/Coach/CEDRIC_O.jpg"
                        },
                        new
                        {
                            ID = 2,
                            FirstName = "DELPHINE",
                            IdSpeciality = 2,
                            LastName = "G",
                            Photo = "/Assets/Images/Coach/DELPHINE G.jpg"
                        },
                        new
                        {
                            ID = 3,
                            FirstName = "FLORIAN",
                            IdSpeciality = 3,
                            LastName = "G",
                            Photo = "/Assets/Images/Coach/FLORIAN_G.jpg"
                        },
                        new
                        {
                            ID = 4,
                            FirstName = "GUILLAUME",
                            IdSpeciality = 1,
                            LastName = "P",
                            Photo = "/Assets/Images/Coach/GUILLAUME P.jpg"
                        },
                        new
                        {
                            ID = 5,
                            FirstName = "JESSUN",
                            IdSpeciality = 1,
                            LastName = "C",
                            Photo = "/Assets/Images/Coach/JESSUN C.jpg"
                        },
                        new
                        {
                            ID = 6,
                            FirstName = "NABIL",
                            IdSpeciality = 4,
                            LastName = "C",
                            Photo = "/Assets/Images/Coach/NABIL C.jpg"
                        });
                });

            modelBuilder.Entity("FITNESSGYM.Models.Exercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Calories")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Exercise");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Calories = 50,
                            Description = "Au sol sur le do, les genoux formant un angle un angle droit avec vos hanches. Ramenez votre buste vers le ciel tout en plaçant les mains au niveau de la nuque.",
                            Duration = 5,
                            Name = "Crunch"
                        },
                        new
                        {
                            Id = 2,
                            Calories = 100,
                            Description = "En position de planche frontale : sur la pointe des pieds, les mains bien à plat sur le sol, le dos droit et la tête dans le prolongement de votre colonne vertébrale. Ramenez ensuite les genoux à votre poitrine de façon alternée.",
                            Duration = 5,
                            Name = "Montain Climber"
                        },
                        new
                        {
                            Id = 3,
                            Calories = 100,
                            Description = "Debout, l'espace entre votre deux pieds correspond à la largeur de vos épaules. Sautez en poussant les genoux vers l'extérieur. Lever les bras en même temps que vous sautez. Puis revenir en position initiale : debout, les bras le long du corps.",
                            Duration = 5,
                            Name = "Jumping jack"
                        },
                        new
                        {
                            Id = 4,
                            Calories = 100,
                            Description = "En position de planche frontale, c'est-à-dire sur la pointe des pieds et mains à plat sur le sol, le dos droit et la tête dans le prolongement de votre colonne vertébrale. Ramenez la poitrine vers le sol en pliant les coudes puis tendez les bras. Restez bien gainé tout au long de l'exercice.",
                            Duration = 5,
                            Name = "Pompes Hiit"
                        },
                        new
                        {
                            Id = 5,
                            Calories = 100,
                            Description = "Commencez en position debout, puis lever rapidement les genoux un après l'autre.",
                            Duration = 5,
                            Name = "Leg lift"
                        });
                });

            modelBuilder.Entity("FITNESSGYM.Models.FavoriteCoach", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<int>("IdCoach")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdClient");

                    b.HasIndex("IdCoach");

                    b.ToTable("FavoriteCoach");
                });

            modelBuilder.Entity("FITNESSGYM.Models.FavoriteExercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<int>("IdExercise")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdClient");

                    b.HasIndex("IdExercise");

                    b.ToTable("FavoriteExercise");
                });

            modelBuilder.Entity("FITNESSGYM.Models.FavoriteLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<int>("IdLocation")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdClient");

                    b.HasIndex("IdLocation");

                    b.ToTable("FavoriteLocation");
                });

            modelBuilder.Entity("FITNESSGYM.Models.FavoriteTrainingProgram", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<int>("IdTrainingProgram")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdClient");

                    b.HasIndex("IdTrainingProgram");

                    b.ToTable("FavoriteTrainingProgram");
                });

            modelBuilder.Entity("FITNESSGYM.Models.Formula", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Commitement")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FormulaRank")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Formula");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Commitement = 0,
                            Description = "Abonnement mensuel de 9€/mois sans engagement, sans période d'essai, seule la période en cours est due. Accès en illimités aux cours et programmes en ligne.",
                            FormulaRank = 1,
                            Name = "No Gym No Problem Month",
                            Price = 9
                        },
                        new
                        {
                            ID = 2,
                            Commitement = 0,
                            Description = "Abonnement annuel de 29€/mois sans engagement, sans période d'essai, seule la période en cours est due. Accès en illimités aux cours et programmes en ligne.",
                            FormulaRank = 1,
                            Name = "No Gym No Problem Year",
                            Price = 59
                        },
                        new
                        {
                            ID = 3,
                            Commitement = 1,
                            Description = "L'abonnement mensuel CLASSIQUE FIT à 29€/mois vous donne accès à tous les clubs FITNESS GYM pour profiter de tous les appareils de musculations et cardio ainsi que de l'accès aux piscines dans les conditions du règlement intérieur. Cet abonnement est AVEC engagement sur une période de 12 mois et est valable de date à date.",
                            FormulaRank = 2,
                            Name = "Classique fit 1",
                            Price = 29
                        },
                        new
                        {
                            ID = 4,
                            Commitement = 0,
                            Description = "L'abonnement mensuel CLASSIQUE FIT à 34€/mois vous donne accès à tous les clubs FITNESS GYM pour profiter de tous les appareils de musculations et cardio ainsi que de l'accès aux piscines dans les conditions du règlement intérieur. Cet abonnement est SANS engagement et valable de date à date. Seule la période en cours est due.",
                            FormulaRank = 2,
                            Name = "Classique fit 2",
                            Price = 34
                        },
                        new
                        {
                            ID = 5,
                            Commitement = 1,
                            Description = "L'abonnement mensuel PREMIUM FIT à 36€/mois vous donne accès à tous les clubs FITNESS GYM pour y pratiquer les activités de sports de fitness et musculation, participer à une multitude de cours ainsi profiter de l'accès aux piscines dans les conditions du règlement intérieur. Cet abonnement est AVEC engagement sur une période de 12 mois et est valable de date à date.",
                            FormulaRank = 3,
                            Name = "Premium fit 1",
                            Price = 39
                        },
                        new
                        {
                            ID = 6,
                            Commitement = 0,
                            Description = "L'abonnement mensuel PREMIUM FIT à 40€/mois vous donne accès à tous les clubs FITNESS GYM pour y pratiquer les activités de sports de fitness et musculation, participer à une multitude de cours ainsi profiter de l'accès aux piscines dans les conditions du règlement intérieur. Cet abonnement est SANS engagement et valable de date à date. Seule la période en cours est due.",
                            FormulaRank = 3,
                            Name = "Premium fit 2",
                            Price = 44
                        });
                });

            modelBuilder.Entity("FITNESSGYM.Models.Goal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CaloriesBurnt")
                        .HasColumnType("int");

                    b.Property<int>("Frequency")
                        .HasColumnType("int");

                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<int?>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdClient");

                    b.ToTable("Goal");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CaloriesBurnt = 1000,
                            Frequency = 3,
                            IdClient = 1,
                            Weight = 75
                        });
                });

            modelBuilder.Entity("FITNESSGYM.Models.IndividualProgram", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdExercise")
                        .HasColumnType("int");

                    b.Property<int>("IdTrainingProgram")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdExercise");

                    b.HasIndex("IdTrainingProgram");

                    b.ToTable("IndividualProgram");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdExercise = 2,
                            IdTrainingProgram = 1
                        },
                        new
                        {
                            Id = 2,
                            IdExercise = 4,
                            IdTrainingProgram = 2
                        },
                        new
                        {
                            Id = 3,
                            IdExercise = 1,
                            IdTrainingProgram = 3
                        },
                        new
                        {
                            Id = 4,
                            IdExercise = 5,
                            IdTrainingProgram = 4
                        },
                        new
                        {
                            Id = 5,
                            IdExercise = 3,
                            IdTrainingProgram = 5
                        });
                });

            modelBuilder.Entity("FITNESSGYM.Models.Location", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Address")
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaxParticipants")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PostalCode")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Location");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Address = "22 bis boulevard Saint Marcel",
                            City = "Paris",
                            MaxParticipants = 500,
                            Name = "Fitness Gym Austerlitz",
                            PostalCode = 75005
                        },
                        new
                        {
                            ID = 2,
                            Address = "4/6 Passage Louis Philippe",
                            City = "Paris",
                            MaxParticipants = 450,
                            Name = "Fitness Gym Bastille",
                            PostalCode = 75011
                        },
                        new
                        {
                            ID = 3,
                            Address = "123 Avenue de France ",
                            City = "Paris",
                            MaxParticipants = 350,
                            Name = "Fitness Gym BNF",
                            PostalCode = 75013
                        },
                        new
                        {
                            ID = 4,
                            Address = "21 rue de la banque",
                            City = "Paris",
                            MaxParticipants = 350,
                            Name = "Fitness Gym Opera",
                            PostalCode = 75002
                        },
                        new
                        {
                            ID = 5,
                            Address = "6 allée de la 2ème Division Blindée",
                            City = "Paris",
                            MaxParticipants = 500,
                            Name = "Fitness Gym Montparnasse",
                            PostalCode = 75014
                        },
                        new
                        {
                            ID = 6,
                            Address = "81 rue de Lagny ",
                            City = "Paris",
                            MaxParticipants = 500,
                            Name = "Fitness Gym Nation",
                            PostalCode = 75020
                        },
                        new
                        {
                            ID = 7,
                            Address = "44 rue de Clichy ",
                            City = "Paris",
                            MaxParticipants = 450,
                            Name = "Fitness Gym Saint-Lazarre",
                            PostalCode = 75009
                        },
                        new
                        {
                            ID = 8,
                            Address = "19, avenue de la Liberté",
                            City = "Nanterre",
                            MaxParticipants = 600,
                            Name = "Fitness Gym La défense",
                            PostalCode = 92000
                        },
                        new
                        {
                            ID = 9,
                            Address = "18-20, rue Auguste Perret",
                            City = "Villejuif",
                            MaxParticipants = 550,
                            Name = "Fitness Gym Villejuif",
                            PostalCode = 94800
                        },
                        new
                        {
                            ID = 10,
                            Address = "11, Rue Exelmans",
                            City = "Versailles",
                            MaxParticipants = 600,
                            Name = "Fitness Gym Versailles",
                            PostalCode = 78000
                        });
                });

            modelBuilder.Entity("FITNESSGYM.Models.Machine", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Machine");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Description = "Améliorez votre endurance avec ce tapis de course qui absorbe le choc des impacts par rapport à la course en extérieur. Marcher, trottiner, courir, sprinter : vous pourrez choisir votre allure en fonction de votre forme ou de votre entraînement. Vous pouvez également augmenter la pente pour intensifier le travail.",
                            Name = "Tapis de course"
                        },
                        new
                        {
                            ID = 2,
                            Description = "Le vélo elliptique, cet incontournable des salles de sport, associe travail cardiovasculaire doux et travail musculaire sans impacts ni douleurs pour les articulations. La particularité de ce vélo ? Ses bras sont mobiles, ce qui vous permettra de solliciter 90% des muscles du corps en reproduisant les mouvements du ski de fond.",
                            Name = "Vélo elliptique"
                        },
                        new
                        {
                            ID = 3,
                            Description = "Ce vélo d’intérieur particulièrement ergonomique vous permet de réaliser des entraînements intenses, de développer vos capacités-cardio-vasculaires et de renforcer vos cuisses. Il possède toutes les fonctions d’un vélo de course : selle ajustable et fine permettant le pédalage en danseuse, guidon anatomique, pédales automatiques, système de freinage et cadre robuste.",
                            Name = "Vélo semi-allongé"
                        },
                        new
                        {
                            ID = 4,
                            Description = "Contrairement à ce que l'on pense, le rameur ne permet pas uniquement de travailler le haut du corps. Les jambes sont aussi très sollicitées et plus vous maîtrisez la technique, plus vous le ressentez ! Bras, épaules, jambes, abdominaux, lombaires… : en réalité, tous les muscles du corps sont mobilisés et renforcés, faisant du rameur un appareil très complet.",
                            Name = "Rameur"
                        },
                        new
                        {
                            ID = 5,
                            Description = "Idéale pour muscler les fessiers, cette machine vous laisse atteindre une extension maximale. Cela dit, aucun risque pour le bas de votre dos car la hanche n'effectue aucune rotation.",
                            Name = "Glute Drive"
                        });
                });

            modelBuilder.Entity("FITNESSGYM.Models.MachineLocation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("IdLocation")
                        .HasColumnType("int");

                    b.Property<int>("IdMachine")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("IdLocation");

                    b.HasIndex("IdMachine");

                    b.ToTable("MachineLocation");
                });

            modelBuilder.Entity("FITNESSGYM.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Un tapis spécialement conçu pour s’adapter à vos exercices au sol. Vous pourrez faire vos abdominaux ou réaliser vos étirements confortablement.",
                            Name = "Tapis de fitness",
                            Price = 15
                        });
                });

            modelBuilder.Entity("FITNESSGYM.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Cancelled")
                        .HasColumnType("int");

                    b.Property<int?>("IdClient")
                        .HasColumnType("int");

                    b.Property<int?>("IdSession")
                        .HasColumnType("int");

                    b.Property<byte[]>("TimeStamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("IdClient");

                    b.HasIndex("IdSession");

                    b.ToTable("Reservation");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cancelled = 0,
                            IdClient = 1,
                            IdSession = 1
                        },
                        new
                        {
                            Id = 2,
                            Cancelled = 0,
                            IdClient = 1,
                            IdSession = 2
                        },
                        new
                        {
                            Id = 3,
                            Cancelled = 0,
                            IdClient = 1,
                            IdSession = 3
                        },
                        new
                        {
                            Id = 4,
                            Cancelled = 0,
                            IdClient = 1,
                            IdSession = 4
                        });
                });

            modelBuilder.Entity("FITNESSGYM.Models.Session", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("FormulaRank")
                        .HasColumnType("int");

                    b.Property<int?>("IdCoach")
                        .HasColumnType("int");

                    b.Property<int?>("IdLocation")
                        .HasColumnType("int");

                    b.Property<int?>("IdTrainingProgram")
                        .HasColumnType("int");

                    b.Property<int?>("MaxParticipants")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SessionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SessionHour")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdCoach");

                    b.HasIndex("IdLocation");

                    b.HasIndex("IdTrainingProgram");

                    b.ToTable("Session");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FormulaRank = 3,
                            IdCoach = 1,
                            IdLocation = 2,
                            IdTrainingProgram = 1,
                            MaxParticipants = 15,
                            SessionDate = new DateTime(2023, 1, 26, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(5756),
                            SessionHour = new DateTime(2023, 1, 25, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(5821)
                        },
                        new
                        {
                            Id = 2,
                            FormulaRank = 3,
                            IdCoach = 5,
                            IdLocation = 7,
                            IdTrainingProgram = 2,
                            MaxParticipants = 20,
                            SessionDate = new DateTime(2023, 1, 27, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(5834),
                            SessionHour = new DateTime(2023, 1, 25, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(5837)
                        },
                        new
                        {
                            Id = 3,
                            FormulaRank = 3,
                            IdCoach = 5,
                            IdLocation = 9,
                            IdTrainingProgram = 3,
                            MaxParticipants = 30,
                            SessionDate = new DateTime(2023, 1, 27, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(5847),
                            SessionHour = new DateTime(2023, 1, 25, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(5849)
                        },
                        new
                        {
                            Id = 4,
                            FormulaRank = 3,
                            IdCoach = 3,
                            IdLocation = 8,
                            IdTrainingProgram = 4,
                            MaxParticipants = 22,
                            SessionDate = new DateTime(2023, 1, 27, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(5865),
                            SessionHour = new DateTime(2023, 1, 25, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(5867)
                        },
                        new
                        {
                            Id = 5,
                            FormulaRank = 3,
                            IdCoach = 1,
                            IdLocation = 3,
                            IdTrainingProgram = 2,
                            MaxParticipants = 18
                        },
                        new
                        {
                            Id = 21,
                            FormulaRank = 3,
                            IdCoach = 4,
                            IdLocation = 4,
                            IdTrainingProgram = 1,
                            MaxParticipants = 13,
                            SessionDate = new DateTime(2023, 1, 27, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(5931),
                            SessionHour = new DateTime(2023, 1, 30, 5, 15, 58, 505, DateTimeKind.Local).AddTicks(5936)
                        },
                        new
                        {
                            Id = 22,
                            FormulaRank = 2,
                            IdCoach = 2,
                            IdLocation = 9,
                            IdTrainingProgram = 1,
                            MaxParticipants = 14,
                            SessionDate = new DateTime(2023, 1, 28, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(5947),
                            SessionHour = new DateTime(2023, 1, 31, 15, 16, 58, 505, DateTimeKind.Local).AddTicks(5949)
                        },
                        new
                        {
                            Id = 23,
                            FormulaRank = 1,
                            IdCoach = 4,
                            IdLocation = 9,
                            IdTrainingProgram = 1,
                            MaxParticipants = 7,
                            SessionDate = new DateTime(2023, 1, 28, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(5957),
                            SessionHour = new DateTime(2023, 2, 1, 10, 21, 58, 505, DateTimeKind.Local).AddTicks(5959)
                        },
                        new
                        {
                            Id = 24,
                            FormulaRank = 2,
                            IdCoach = 3,
                            IdLocation = 6,
                            IdTrainingProgram = 1,
                            MaxParticipants = 18,
                            SessionDate = new DateTime(2023, 1, 28, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(5968),
                            SessionHour = new DateTime(2023, 1, 31, 1, 57, 58, 505, DateTimeKind.Local).AddTicks(5969)
                        },
                        new
                        {
                            Id = 25,
                            FormulaRank = 2,
                            IdCoach = 5,
                            IdLocation = 1,
                            IdTrainingProgram = 1,
                            MaxParticipants = 11,
                            SessionDate = new DateTime(2023, 1, 27, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(5979),
                            SessionHour = new DateTime(2023, 1, 31, 6, 3, 58, 505, DateTimeKind.Local).AddTicks(5981)
                        },
                        new
                        {
                            Id = 26,
                            FormulaRank = 1,
                            IdCoach = 3,
                            IdLocation = 6,
                            IdTrainingProgram = 1,
                            MaxParticipants = 15,
                            SessionDate = new DateTime(2023, 1, 29, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(5989),
                            SessionHour = new DateTime(2023, 1, 26, 10, 17, 58, 505, DateTimeKind.Local).AddTicks(5991)
                        },
                        new
                        {
                            Id = 27,
                            FormulaRank = 1,
                            IdCoach = 1,
                            IdLocation = 1,
                            IdTrainingProgram = 1,
                            MaxParticipants = 13,
                            SessionDate = new DateTime(2023, 1, 29, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6000),
                            SessionHour = new DateTime(2023, 1, 27, 7, 35, 58, 505, DateTimeKind.Local).AddTicks(6001)
                        },
                        new
                        {
                            Id = 28,
                            FormulaRank = 3,
                            IdCoach = 3,
                            IdLocation = 1,
                            IdTrainingProgram = 1,
                            MaxParticipants = 12,
                            SessionDate = new DateTime(2023, 1, 29, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6009),
                            SessionHour = new DateTime(2023, 1, 30, 4, 19, 58, 505, DateTimeKind.Local).AddTicks(6011)
                        },
                        new
                        {
                            Id = 29,
                            FormulaRank = 3,
                            IdCoach = 2,
                            IdLocation = 2,
                            IdTrainingProgram = 1,
                            MaxParticipants = 10,
                            SessionDate = new DateTime(2023, 1, 28, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6020),
                            SessionHour = new DateTime(2023, 1, 26, 14, 7, 58, 505, DateTimeKind.Local).AddTicks(6021)
                        },
                        new
                        {
                            Id = 36,
                            FormulaRank = 3,
                            IdCoach = 3,
                            IdLocation = 9,
                            IdTrainingProgram = 2,
                            MaxParticipants = 7,
                            SessionDate = new DateTime(2023, 1, 26, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6030),
                            SessionHour = new DateTime(2023, 1, 30, 15, 25, 58, 505, DateTimeKind.Local).AddTicks(6032)
                        },
                        new
                        {
                            Id = 37,
                            FormulaRank = 2,
                            IdCoach = 3,
                            IdLocation = 2,
                            IdTrainingProgram = 2,
                            MaxParticipants = 5,
                            SessionDate = new DateTime(2023, 1, 29, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6041),
                            SessionHour = new DateTime(2023, 1, 26, 3, 2, 58, 505, DateTimeKind.Local).AddTicks(6042)
                        },
                        new
                        {
                            Id = 38,
                            FormulaRank = 2,
                            IdCoach = 1,
                            IdLocation = 5,
                            IdTrainingProgram = 2,
                            MaxParticipants = 12,
                            SessionDate = new DateTime(2023, 1, 26, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6051),
                            SessionHour = new DateTime(2023, 1, 30, 6, 41, 58, 505, DateTimeKind.Local).AddTicks(6052)
                        },
                        new
                        {
                            Id = 39,
                            FormulaRank = 3,
                            IdCoach = 4,
                            IdLocation = 8,
                            IdTrainingProgram = 2,
                            MaxParticipants = 15,
                            SessionDate = new DateTime(2023, 1, 27, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6061),
                            SessionHour = new DateTime(2023, 1, 28, 15, 0, 58, 505, DateTimeKind.Local).AddTicks(6063)
                        },
                        new
                        {
                            Id = 40,
                            FormulaRank = 2,
                            IdCoach = 5,
                            IdLocation = 7,
                            IdTrainingProgram = 2,
                            MaxParticipants = 10,
                            SessionDate = new DateTime(2023, 1, 26, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6071),
                            SessionHour = new DateTime(2023, 1, 28, 20, 25, 58, 505, DateTimeKind.Local).AddTicks(6073)
                        },
                        new
                        {
                            Id = 41,
                            FormulaRank = 2,
                            IdCoach = 5,
                            IdLocation = 7,
                            IdTrainingProgram = 2,
                            MaxParticipants = 16,
                            SessionDate = new DateTime(2023, 1, 28, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6081),
                            SessionHour = new DateTime(2023, 1, 26, 20, 36, 58, 505, DateTimeKind.Local).AddTicks(6083)
                        },
                        new
                        {
                            Id = 42,
                            FormulaRank = 2,
                            IdCoach = 2,
                            IdLocation = 1,
                            IdTrainingProgram = 2,
                            MaxParticipants = 15,
                            SessionDate = new DateTime(2023, 1, 27, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6092),
                            SessionHour = new DateTime(2023, 1, 25, 14, 2, 58, 505, DateTimeKind.Local).AddTicks(6094)
                        },
                        new
                        {
                            Id = 43,
                            FormulaRank = 1,
                            IdCoach = 3,
                            IdLocation = 8,
                            IdTrainingProgram = 2,
                            MaxParticipants = 8,
                            SessionDate = new DateTime(2023, 1, 26, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6102),
                            SessionHour = new DateTime(2023, 1, 26, 17, 58, 58, 505, DateTimeKind.Local).AddTicks(6104)
                        },
                        new
                        {
                            Id = 44,
                            FormulaRank = 3,
                            IdCoach = 2,
                            IdLocation = 9,
                            IdTrainingProgram = 2,
                            MaxParticipants = 19,
                            SessionDate = new DateTime(2023, 1, 28, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6112),
                            SessionHour = new DateTime(2023, 1, 31, 20, 30, 58, 505, DateTimeKind.Local).AddTicks(6114)
                        },
                        new
                        {
                            Id = 51,
                            FormulaRank = 2,
                            IdCoach = 5,
                            IdLocation = 1,
                            IdTrainingProgram = 3,
                            MaxParticipants = 5,
                            SessionDate = new DateTime(2023, 1, 27, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6127),
                            SessionHour = new DateTime(2023, 1, 28, 4, 54, 58, 505, DateTimeKind.Local).AddTicks(6129)
                        },
                        new
                        {
                            Id = 52,
                            FormulaRank = 2,
                            IdCoach = 5,
                            IdLocation = 3,
                            IdTrainingProgram = 3,
                            MaxParticipants = 6,
                            SessionDate = new DateTime(2023, 1, 28, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6138),
                            SessionHour = new DateTime(2023, 1, 29, 3, 32, 58, 505, DateTimeKind.Local).AddTicks(6140)
                        },
                        new
                        {
                            Id = 53,
                            FormulaRank = 3,
                            IdCoach = 2,
                            IdLocation = 2,
                            IdTrainingProgram = 3,
                            MaxParticipants = 16,
                            SessionDate = new DateTime(2023, 1, 27, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6148),
                            SessionHour = new DateTime(2023, 1, 30, 9, 18, 58, 505, DateTimeKind.Local).AddTicks(6150)
                        },
                        new
                        {
                            Id = 54,
                            FormulaRank = 3,
                            IdCoach = 4,
                            IdLocation = 5,
                            IdTrainingProgram = 3,
                            MaxParticipants = 6,
                            SessionDate = new DateTime(2023, 1, 29, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6159),
                            SessionHour = new DateTime(2023, 1, 31, 3, 36, 58, 505, DateTimeKind.Local).AddTicks(6161)
                        },
                        new
                        {
                            Id = 55,
                            FormulaRank = 2,
                            IdCoach = 5,
                            IdLocation = 1,
                            IdTrainingProgram = 3,
                            MaxParticipants = 18,
                            SessionDate = new DateTime(2023, 1, 28, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6169),
                            SessionHour = new DateTime(2023, 1, 31, 4, 49, 58, 505, DateTimeKind.Local).AddTicks(6171)
                        },
                        new
                        {
                            Id = 56,
                            FormulaRank = 3,
                            IdCoach = 1,
                            IdLocation = 5,
                            IdTrainingProgram = 3,
                            MaxParticipants = 17,
                            SessionDate = new DateTime(2023, 1, 28, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6179),
                            SessionHour = new DateTime(2023, 1, 31, 10, 24, 58, 505, DateTimeKind.Local).AddTicks(6181)
                        },
                        new
                        {
                            Id = 57,
                            FormulaRank = 2,
                            IdCoach = 5,
                            IdLocation = 8,
                            IdTrainingProgram = 3,
                            MaxParticipants = 7,
                            SessionDate = new DateTime(2023, 1, 29, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6189),
                            SessionHour = new DateTime(2023, 1, 25, 13, 34, 58, 505, DateTimeKind.Local).AddTicks(6191)
                        },
                        new
                        {
                            Id = 58,
                            FormulaRank = 1,
                            IdCoach = 5,
                            IdLocation = 8,
                            IdTrainingProgram = 3,
                            MaxParticipants = 9,
                            SessionDate = new DateTime(2023, 1, 29, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6199),
                            SessionHour = new DateTime(2023, 1, 30, 11, 22, 58, 505, DateTimeKind.Local).AddTicks(6201)
                        },
                        new
                        {
                            Id = 59,
                            FormulaRank = 3,
                            IdCoach = 1,
                            IdLocation = 6,
                            IdTrainingProgram = 3,
                            MaxParticipants = 15,
                            SessionDate = new DateTime(2023, 1, 29, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6208),
                            SessionHour = new DateTime(2023, 1, 31, 6, 21, 58, 505, DateTimeKind.Local).AddTicks(6210)
                        },
                        new
                        {
                            Id = 66,
                            FormulaRank = 2,
                            IdCoach = 4,
                            IdLocation = 1,
                            IdTrainingProgram = 4,
                            MaxParticipants = 15,
                            SessionDate = new DateTime(2023, 1, 29, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6218),
                            SessionHour = new DateTime(2023, 1, 30, 22, 11, 58, 505, DateTimeKind.Local).AddTicks(6220)
                        },
                        new
                        {
                            Id = 67,
                            FormulaRank = 1,
                            IdCoach = 4,
                            IdLocation = 1,
                            IdTrainingProgram = 4,
                            MaxParticipants = 15,
                            SessionDate = new DateTime(2023, 1, 26, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6229),
                            SessionHour = new DateTime(2023, 1, 25, 15, 19, 58, 505, DateTimeKind.Local).AddTicks(6230)
                        },
                        new
                        {
                            Id = 68,
                            FormulaRank = 1,
                            IdCoach = 5,
                            IdLocation = 2,
                            IdTrainingProgram = 4,
                            MaxParticipants = 14,
                            SessionDate = new DateTime(2023, 1, 27, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6239),
                            SessionHour = new DateTime(2023, 1, 29, 16, 57, 58, 505, DateTimeKind.Local).AddTicks(6241)
                        },
                        new
                        {
                            Id = 69,
                            FormulaRank = 1,
                            IdCoach = 5,
                            IdLocation = 9,
                            IdTrainingProgram = 4,
                            MaxParticipants = 17,
                            SessionDate = new DateTime(2023, 1, 29, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6249),
                            SessionHour = new DateTime(2023, 1, 27, 3, 25, 58, 505, DateTimeKind.Local).AddTicks(6250)
                        },
                        new
                        {
                            Id = 70,
                            FormulaRank = 1,
                            IdCoach = 3,
                            IdLocation = 9,
                            IdTrainingProgram = 4,
                            MaxParticipants = 19,
                            SessionDate = new DateTime(2023, 1, 27, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6259),
                            SessionHour = new DateTime(2023, 1, 29, 6, 16, 58, 505, DateTimeKind.Local).AddTicks(6261)
                        },
                        new
                        {
                            Id = 71,
                            FormulaRank = 1,
                            IdCoach = 1,
                            IdLocation = 3,
                            IdTrainingProgram = 4,
                            MaxParticipants = 17,
                            SessionDate = new DateTime(2023, 1, 27, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6269),
                            SessionHour = new DateTime(2023, 1, 31, 7, 6, 58, 505, DateTimeKind.Local).AddTicks(6271)
                        },
                        new
                        {
                            Id = 72,
                            FormulaRank = 1,
                            IdCoach = 3,
                            IdLocation = 9,
                            IdTrainingProgram = 4,
                            MaxParticipants = 8,
                            SessionDate = new DateTime(2023, 1, 29, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6279),
                            SessionHour = new DateTime(2023, 1, 27, 12, 18, 58, 505, DateTimeKind.Local).AddTicks(6281)
                        },
                        new
                        {
                            Id = 73,
                            FormulaRank = 1,
                            IdCoach = 4,
                            IdLocation = 3,
                            IdTrainingProgram = 4,
                            MaxParticipants = 5,
                            SessionDate = new DateTime(2023, 1, 26, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6289),
                            SessionHour = new DateTime(2023, 1, 31, 2, 38, 58, 505, DateTimeKind.Local).AddTicks(6291)
                        },
                        new
                        {
                            Id = 74,
                            FormulaRank = 2,
                            IdCoach = 5,
                            IdLocation = 8,
                            IdTrainingProgram = 4,
                            MaxParticipants = 17,
                            SessionDate = new DateTime(2023, 1, 26, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6299),
                            SessionHour = new DateTime(2023, 1, 30, 6, 29, 58, 505, DateTimeKind.Local).AddTicks(6301)
                        },
                        new
                        {
                            Id = 81,
                            FormulaRank = 3,
                            IdCoach = 1,
                            IdLocation = 3,
                            IdTrainingProgram = 5,
                            MaxParticipants = 19,
                            SessionDate = new DateTime(2023, 1, 28, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6309),
                            SessionHour = new DateTime(2023, 1, 29, 10, 1, 58, 505, DateTimeKind.Local).AddTicks(6311)
                        },
                        new
                        {
                            Id = 82,
                            FormulaRank = 3,
                            IdCoach = 4,
                            IdLocation = 8,
                            IdTrainingProgram = 5,
                            MaxParticipants = 11,
                            SessionDate = new DateTime(2023, 1, 26, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6319),
                            SessionHour = new DateTime(2023, 1, 26, 10, 52, 58, 505, DateTimeKind.Local).AddTicks(6321)
                        },
                        new
                        {
                            Id = 83,
                            FormulaRank = 2,
                            IdCoach = 3,
                            IdLocation = 7,
                            IdTrainingProgram = 5,
                            MaxParticipants = 13,
                            SessionDate = new DateTime(2023, 1, 26, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6329),
                            SessionHour = new DateTime(2023, 1, 26, 9, 6, 58, 505, DateTimeKind.Local).AddTicks(6331)
                        },
                        new
                        {
                            Id = 84,
                            FormulaRank = 3,
                            IdCoach = 1,
                            IdLocation = 1,
                            IdTrainingProgram = 5,
                            MaxParticipants = 17,
                            SessionDate = new DateTime(2023, 1, 26, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6339),
                            SessionHour = new DateTime(2023, 1, 30, 23, 27, 58, 505, DateTimeKind.Local).AddTicks(6341)
                        },
                        new
                        {
                            Id = 85,
                            FormulaRank = 3,
                            IdCoach = 5,
                            IdLocation = 9,
                            IdTrainingProgram = 5,
                            MaxParticipants = 18,
                            SessionDate = new DateTime(2023, 1, 29, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6354),
                            SessionHour = new DateTime(2023, 1, 25, 23, 53, 58, 505, DateTimeKind.Local).AddTicks(6356)
                        },
                        new
                        {
                            Id = 86,
                            FormulaRank = 1,
                            IdCoach = 3,
                            IdLocation = 5,
                            IdTrainingProgram = 5,
                            MaxParticipants = 19,
                            SessionDate = new DateTime(2023, 1, 26, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6365),
                            SessionHour = new DateTime(2023, 1, 31, 16, 32, 58, 505, DateTimeKind.Local).AddTicks(6367)
                        },
                        new
                        {
                            Id = 87,
                            FormulaRank = 3,
                            IdCoach = 1,
                            IdLocation = 3,
                            IdTrainingProgram = 5,
                            MaxParticipants = 6,
                            SessionDate = new DateTime(2023, 1, 27, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6375),
                            SessionHour = new DateTime(2023, 1, 26, 8, 35, 58, 505, DateTimeKind.Local).AddTicks(6377)
                        },
                        new
                        {
                            Id = 88,
                            FormulaRank = 1,
                            IdCoach = 5,
                            IdLocation = 5,
                            IdTrainingProgram = 5,
                            MaxParticipants = 6,
                            SessionDate = new DateTime(2023, 1, 28, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6385),
                            SessionHour = new DateTime(2023, 1, 28, 12, 33, 58, 505, DateTimeKind.Local).AddTicks(6387)
                        },
                        new
                        {
                            Id = 89,
                            FormulaRank = 1,
                            IdCoach = 3,
                            IdLocation = 1,
                            IdTrainingProgram = 5,
                            MaxParticipants = 8,
                            SessionDate = new DateTime(2023, 1, 28, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6396),
                            SessionHour = new DateTime(2023, 1, 31, 0, 46, 58, 505, DateTimeKind.Local).AddTicks(6397)
                        },
                        new
                        {
                            Id = 96,
                            FormulaRank = 3,
                            IdCoach = 4,
                            IdLocation = 1,
                            IdTrainingProgram = 6,
                            MaxParticipants = 11,
                            SessionDate = new DateTime(2023, 1, 29, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6405),
                            SessionHour = new DateTime(2023, 1, 31, 12, 33, 58, 505, DateTimeKind.Local).AddTicks(6407)
                        },
                        new
                        {
                            Id = 97,
                            FormulaRank = 2,
                            IdCoach = 3,
                            IdLocation = 8,
                            IdTrainingProgram = 6,
                            MaxParticipants = 9,
                            SessionDate = new DateTime(2023, 1, 27, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6415),
                            SessionHour = new DateTime(2023, 1, 27, 16, 2, 58, 505, DateTimeKind.Local).AddTicks(6417)
                        },
                        new
                        {
                            Id = 98,
                            FormulaRank = 1,
                            IdCoach = 1,
                            IdLocation = 4,
                            IdTrainingProgram = 6,
                            MaxParticipants = 13,
                            SessionDate = new DateTime(2023, 1, 29, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6425),
                            SessionHour = new DateTime(2023, 1, 26, 15, 18, 58, 505, DateTimeKind.Local).AddTicks(6427)
                        },
                        new
                        {
                            Id = 99,
                            FormulaRank = 2,
                            IdCoach = 2,
                            IdLocation = 7,
                            IdTrainingProgram = 6,
                            MaxParticipants = 14,
                            SessionDate = new DateTime(2023, 1, 28, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6435),
                            SessionHour = new DateTime(2023, 1, 25, 19, 4, 58, 505, DateTimeKind.Local).AddTicks(6437)
                        },
                        new
                        {
                            Id = 100,
                            FormulaRank = 2,
                            IdCoach = 1,
                            IdLocation = 1,
                            IdTrainingProgram = 6,
                            MaxParticipants = 6,
                            SessionDate = new DateTime(2023, 1, 29, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6445),
                            SessionHour = new DateTime(2023, 1, 30, 9, 37, 58, 505, DateTimeKind.Local).AddTicks(6447)
                        },
                        new
                        {
                            Id = 101,
                            FormulaRank = 3,
                            IdCoach = 1,
                            IdLocation = 7,
                            IdTrainingProgram = 6,
                            MaxParticipants = 11,
                            SessionDate = new DateTime(2023, 1, 28, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6455),
                            SessionHour = new DateTime(2023, 2, 1, 5, 11, 58, 505, DateTimeKind.Local).AddTicks(6456)
                        },
                        new
                        {
                            Id = 102,
                            FormulaRank = 3,
                            IdCoach = 4,
                            IdLocation = 8,
                            IdTrainingProgram = 6,
                            MaxParticipants = 10,
                            SessionDate = new DateTime(2023, 1, 26, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6465),
                            SessionHour = new DateTime(2023, 1, 27, 19, 31, 58, 505, DateTimeKind.Local).AddTicks(6467)
                        },
                        new
                        {
                            Id = 103,
                            FormulaRank = 1,
                            IdCoach = 2,
                            IdLocation = 8,
                            IdTrainingProgram = 6,
                            MaxParticipants = 18,
                            SessionDate = new DateTime(2023, 1, 29, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6503),
                            SessionHour = new DateTime(2023, 2, 1, 10, 45, 58, 505, DateTimeKind.Local).AddTicks(6505)
                        },
                        new
                        {
                            Id = 104,
                            FormulaRank = 3,
                            IdCoach = 4,
                            IdLocation = 4,
                            IdTrainingProgram = 6,
                            MaxParticipants = 15,
                            SessionDate = new DateTime(2023, 1, 29, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6513),
                            SessionHour = new DateTime(2023, 1, 29, 0, 23, 58, 505, DateTimeKind.Local).AddTicks(6515)
                        },
                        new
                        {
                            Id = 111,
                            FormulaRank = 3,
                            IdCoach = 1,
                            IdLocation = 1,
                            IdTrainingProgram = 7,
                            MaxParticipants = 12,
                            SessionDate = new DateTime(2023, 1, 27, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6523),
                            SessionHour = new DateTime(2023, 1, 28, 1, 9, 58, 505, DateTimeKind.Local).AddTicks(6525)
                        },
                        new
                        {
                            Id = 112,
                            FormulaRank = 1,
                            IdCoach = 5,
                            IdLocation = 6,
                            IdTrainingProgram = 7,
                            MaxParticipants = 8,
                            SessionDate = new DateTime(2023, 1, 26, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6533),
                            SessionHour = new DateTime(2023, 1, 31, 23, 12, 58, 505, DateTimeKind.Local).AddTicks(6535)
                        },
                        new
                        {
                            Id = 113,
                            FormulaRank = 3,
                            IdCoach = 1,
                            IdLocation = 8,
                            IdTrainingProgram = 7,
                            MaxParticipants = 5,
                            SessionDate = new DateTime(2023, 1, 27, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6543),
                            SessionHour = new DateTime(2023, 1, 25, 20, 31, 58, 505, DateTimeKind.Local).AddTicks(6545)
                        },
                        new
                        {
                            Id = 114,
                            FormulaRank = 3,
                            IdCoach = 4,
                            IdLocation = 4,
                            IdTrainingProgram = 7,
                            MaxParticipants = 11,
                            SessionDate = new DateTime(2023, 1, 29, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6554),
                            SessionHour = new DateTime(2023, 1, 29, 11, 48, 58, 505, DateTimeKind.Local).AddTicks(6555)
                        },
                        new
                        {
                            Id = 115,
                            FormulaRank = 1,
                            IdCoach = 3,
                            IdLocation = 6,
                            IdTrainingProgram = 7,
                            MaxParticipants = 10,
                            SessionDate = new DateTime(2023, 1, 29, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6563),
                            SessionHour = new DateTime(2023, 1, 29, 21, 38, 58, 505, DateTimeKind.Local).AddTicks(6565)
                        },
                        new
                        {
                            Id = 116,
                            FormulaRank = 3,
                            IdCoach = 2,
                            IdLocation = 7,
                            IdTrainingProgram = 7,
                            MaxParticipants = 10,
                            SessionDate = new DateTime(2023, 1, 27, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6574),
                            SessionHour = new DateTime(2023, 1, 31, 9, 50, 58, 505, DateTimeKind.Local).AddTicks(6576)
                        },
                        new
                        {
                            Id = 117,
                            FormulaRank = 1,
                            IdCoach = 5,
                            IdLocation = 7,
                            IdTrainingProgram = 7,
                            MaxParticipants = 9,
                            SessionDate = new DateTime(2023, 1, 26, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6590),
                            SessionHour = new DateTime(2023, 1, 27, 9, 30, 58, 505, DateTimeKind.Local).AddTicks(6592)
                        },
                        new
                        {
                            Id = 118,
                            FormulaRank = 1,
                            IdCoach = 5,
                            IdLocation = 3,
                            IdTrainingProgram = 7,
                            MaxParticipants = 7,
                            SessionDate = new DateTime(2023, 1, 28, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6601),
                            SessionHour = new DateTime(2023, 1, 30, 11, 49, 58, 505, DateTimeKind.Local).AddTicks(6602)
                        },
                        new
                        {
                            Id = 119,
                            FormulaRank = 3,
                            IdCoach = 5,
                            IdLocation = 1,
                            IdTrainingProgram = 7,
                            MaxParticipants = 10,
                            SessionDate = new DateTime(2023, 1, 29, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6610),
                            SessionHour = new DateTime(2023, 2, 1, 10, 3, 58, 505, DateTimeKind.Local).AddTicks(6612)
                        },
                        new
                        {
                            Id = 126,
                            FormulaRank = 1,
                            IdCoach = 5,
                            IdLocation = 4,
                            IdTrainingProgram = 8,
                            MaxParticipants = 16,
                            SessionDate = new DateTime(2023, 1, 29, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6620),
                            SessionHour = new DateTime(2023, 1, 29, 18, 33, 58, 505, DateTimeKind.Local).AddTicks(6622)
                        },
                        new
                        {
                            Id = 127,
                            FormulaRank = 3,
                            IdCoach = 5,
                            IdLocation = 9,
                            IdTrainingProgram = 8,
                            MaxParticipants = 11,
                            SessionDate = new DateTime(2023, 1, 28, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6630),
                            SessionHour = new DateTime(2023, 1, 30, 16, 30, 58, 505, DateTimeKind.Local).AddTicks(6631)
                        },
                        new
                        {
                            Id = 128,
                            FormulaRank = 1,
                            IdCoach = 4,
                            IdLocation = 8,
                            IdTrainingProgram = 8,
                            MaxParticipants = 15,
                            SessionDate = new DateTime(2023, 1, 26, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6639),
                            SessionHour = new DateTime(2023, 1, 28, 9, 8, 58, 505, DateTimeKind.Local).AddTicks(6641)
                        },
                        new
                        {
                            Id = 129,
                            FormulaRank = 3,
                            IdCoach = 2,
                            IdLocation = 9,
                            IdTrainingProgram = 8,
                            MaxParticipants = 13,
                            SessionDate = new DateTime(2023, 1, 27, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6649),
                            SessionHour = new DateTime(2023, 1, 30, 3, 23, 58, 505, DateTimeKind.Local).AddTicks(6650)
                        },
                        new
                        {
                            Id = 130,
                            FormulaRank = 1,
                            IdCoach = 3,
                            IdLocation = 5,
                            IdTrainingProgram = 8,
                            MaxParticipants = 16,
                            SessionDate = new DateTime(2023, 1, 26, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6659),
                            SessionHour = new DateTime(2023, 1, 29, 3, 20, 58, 505, DateTimeKind.Local).AddTicks(6661)
                        },
                        new
                        {
                            Id = 131,
                            FormulaRank = 2,
                            IdCoach = 5,
                            IdLocation = 7,
                            IdTrainingProgram = 8,
                            MaxParticipants = 19,
                            SessionDate = new DateTime(2023, 1, 26, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6669),
                            SessionHour = new DateTime(2023, 1, 28, 17, 17, 58, 505, DateTimeKind.Local).AddTicks(6671)
                        },
                        new
                        {
                            Id = 132,
                            FormulaRank = 3,
                            IdCoach = 4,
                            IdLocation = 3,
                            IdTrainingProgram = 8,
                            MaxParticipants = 10,
                            SessionDate = new DateTime(2023, 1, 29, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6679),
                            SessionHour = new DateTime(2023, 2, 1, 1, 37, 58, 505, DateTimeKind.Local).AddTicks(6681)
                        },
                        new
                        {
                            Id = 133,
                            FormulaRank = 1,
                            IdCoach = 1,
                            IdLocation = 5,
                            IdTrainingProgram = 8,
                            MaxParticipants = 17,
                            SessionDate = new DateTime(2023, 1, 27, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6689),
                            SessionHour = new DateTime(2023, 1, 31, 20, 35, 58, 505, DateTimeKind.Local).AddTicks(6690)
                        },
                        new
                        {
                            Id = 134,
                            FormulaRank = 2,
                            IdCoach = 3,
                            IdLocation = 2,
                            IdTrainingProgram = 8,
                            MaxParticipants = 8,
                            SessionDate = new DateTime(2023, 1, 28, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6698),
                            SessionHour = new DateTime(2023, 1, 28, 17, 49, 58, 505, DateTimeKind.Local).AddTicks(6700)
                        },
                        new
                        {
                            Id = 141,
                            FormulaRank = 3,
                            IdCoach = 1,
                            IdLocation = 4,
                            IdTrainingProgram = 9,
                            MaxParticipants = 10,
                            SessionDate = new DateTime(2023, 1, 27, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6708),
                            SessionHour = new DateTime(2023, 1, 27, 5, 6, 58, 505, DateTimeKind.Local).AddTicks(6710)
                        },
                        new
                        {
                            Id = 142,
                            FormulaRank = 3,
                            IdCoach = 3,
                            IdLocation = 4,
                            IdTrainingProgram = 9,
                            MaxParticipants = 8,
                            SessionDate = new DateTime(2023, 1, 28, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6717),
                            SessionHour = new DateTime(2023, 1, 29, 19, 4, 58, 505, DateTimeKind.Local).AddTicks(6719)
                        },
                        new
                        {
                            Id = 143,
                            FormulaRank = 3,
                            IdCoach = 2,
                            IdLocation = 8,
                            IdTrainingProgram = 9,
                            MaxParticipants = 11,
                            SessionDate = new DateTime(2023, 1, 29, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6727),
                            SessionHour = new DateTime(2023, 1, 31, 17, 21, 58, 505, DateTimeKind.Local).AddTicks(6729)
                        },
                        new
                        {
                            Id = 144,
                            FormulaRank = 2,
                            IdCoach = 3,
                            IdLocation = 4,
                            IdTrainingProgram = 9,
                            MaxParticipants = 5,
                            SessionDate = new DateTime(2023, 1, 28, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6737),
                            SessionHour = new DateTime(2023, 1, 29, 19, 35, 58, 505, DateTimeKind.Local).AddTicks(6738)
                        },
                        new
                        {
                            Id = 145,
                            FormulaRank = 1,
                            IdCoach = 3,
                            IdLocation = 1,
                            IdTrainingProgram = 9,
                            MaxParticipants = 11,
                            SessionDate = new DateTime(2023, 1, 26, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6746),
                            SessionHour = new DateTime(2023, 2, 1, 8, 49, 58, 505, DateTimeKind.Local).AddTicks(6748)
                        },
                        new
                        {
                            Id = 146,
                            FormulaRank = 3,
                            IdCoach = 5,
                            IdLocation = 7,
                            IdTrainingProgram = 9,
                            MaxParticipants = 5,
                            SessionDate = new DateTime(2023, 1, 27, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6756),
                            SessionHour = new DateTime(2023, 1, 30, 3, 57, 58, 505, DateTimeKind.Local).AddTicks(6757)
                        },
                        new
                        {
                            Id = 147,
                            FormulaRank = 3,
                            IdCoach = 2,
                            IdLocation = 1,
                            IdTrainingProgram = 9,
                            MaxParticipants = 18,
                            SessionDate = new DateTime(2023, 1, 27, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6766),
                            SessionHour = new DateTime(2023, 1, 26, 7, 13, 58, 505, DateTimeKind.Local).AddTicks(6767)
                        },
                        new
                        {
                            Id = 148,
                            FormulaRank = 2,
                            IdCoach = 1,
                            IdLocation = 2,
                            IdTrainingProgram = 9,
                            MaxParticipants = 11,
                            SessionDate = new DateTime(2023, 1, 29, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6776),
                            SessionHour = new DateTime(2023, 1, 27, 20, 6, 58, 505, DateTimeKind.Local).AddTicks(6777)
                        },
                        new
                        {
                            Id = 149,
                            FormulaRank = 2,
                            IdCoach = 1,
                            IdLocation = 8,
                            IdTrainingProgram = 9,
                            MaxParticipants = 7,
                            SessionDate = new DateTime(2023, 1, 26, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6785),
                            SessionHour = new DateTime(2023, 1, 30, 11, 23, 58, 505, DateTimeKind.Local).AddTicks(6786)
                        },
                        new
                        {
                            Id = 156,
                            FormulaRank = 1,
                            IdCoach = 5,
                            IdLocation = 1,
                            IdTrainingProgram = 10,
                            MaxParticipants = 16,
                            SessionDate = new DateTime(2023, 1, 26, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6795),
                            SessionHour = new DateTime(2023, 1, 25, 23, 7, 58, 505, DateTimeKind.Local).AddTicks(6796)
                        },
                        new
                        {
                            Id = 157,
                            FormulaRank = 1,
                            IdCoach = 4,
                            IdLocation = 8,
                            IdTrainingProgram = 10,
                            MaxParticipants = 7,
                            SessionDate = new DateTime(2023, 1, 29, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6804),
                            SessionHour = new DateTime(2023, 1, 27, 22, 30, 58, 505, DateTimeKind.Local).AddTicks(6806)
                        },
                        new
                        {
                            Id = 158,
                            FormulaRank = 3,
                            IdCoach = 3,
                            IdLocation = 2,
                            IdTrainingProgram = 10,
                            MaxParticipants = 19,
                            SessionDate = new DateTime(2023, 1, 27, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6814),
                            SessionHour = new DateTime(2023, 1, 26, 20, 40, 58, 505, DateTimeKind.Local).AddTicks(6816)
                        },
                        new
                        {
                            Id = 159,
                            FormulaRank = 1,
                            IdCoach = 2,
                            IdLocation = 2,
                            IdTrainingProgram = 10,
                            MaxParticipants = 11,
                            SessionDate = new DateTime(2023, 1, 29, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6830),
                            SessionHour = new DateTime(2023, 1, 29, 9, 28, 58, 505, DateTimeKind.Local).AddTicks(6832)
                        },
                        new
                        {
                            Id = 160,
                            FormulaRank = 1,
                            IdCoach = 2,
                            IdLocation = 7,
                            IdTrainingProgram = 10,
                            MaxParticipants = 16,
                            SessionDate = new DateTime(2023, 1, 29, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6840),
                            SessionHour = new DateTime(2023, 1, 29, 21, 56, 58, 505, DateTimeKind.Local).AddTicks(6842)
                        },
                        new
                        {
                            Id = 161,
                            FormulaRank = 1,
                            IdCoach = 4,
                            IdLocation = 8,
                            IdTrainingProgram = 10,
                            MaxParticipants = 14,
                            SessionDate = new DateTime(2023, 1, 29, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6850),
                            SessionHour = new DateTime(2023, 1, 31, 18, 9, 58, 505, DateTimeKind.Local).AddTicks(6852)
                        },
                        new
                        {
                            Id = 162,
                            FormulaRank = 3,
                            IdCoach = 1,
                            IdLocation = 8,
                            IdTrainingProgram = 10,
                            MaxParticipants = 9,
                            SessionDate = new DateTime(2023, 1, 29, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6860),
                            SessionHour = new DateTime(2023, 1, 28, 3, 50, 58, 505, DateTimeKind.Local).AddTicks(6862)
                        },
                        new
                        {
                            Id = 163,
                            FormulaRank = 2,
                            IdCoach = 1,
                            IdLocation = 9,
                            IdTrainingProgram = 10,
                            MaxParticipants = 15,
                            SessionDate = new DateTime(2023, 1, 29, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6870),
                            SessionHour = new DateTime(2023, 1, 30, 23, 19, 58, 505, DateTimeKind.Local).AddTicks(6872)
                        },
                        new
                        {
                            Id = 164,
                            FormulaRank = 3,
                            IdCoach = 3,
                            IdLocation = 5,
                            IdTrainingProgram = 10,
                            MaxParticipants = 8,
                            SessionDate = new DateTime(2023, 1, 26, 12, 17, 58, 505, DateTimeKind.Local).AddTicks(6880),
                            SessionHour = new DateTime(2023, 1, 27, 22, 30, 58, 505, DateTimeKind.Local).AddTicks(6882)
                        });
                });

            modelBuilder.Entity("FITNESSGYM.Models.Speciality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Speciality");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Yoga Expert"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Bodybuilder"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Hiit Expert"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Cardio"
                        });
                });

            modelBuilder.Entity("FITNESSGYM.Models.Subscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Discount")
                        .HasColumnType("int");

                    b.Property<DateTime>("Entrydate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<int>("IdFormula")
                        .HasColumnType("int");

                    b.Property<int?>("Price")
                        .HasColumnType("int");

                    b.Property<DateTime>("Sortdate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdClient");

                    b.HasIndex("IdFormula");

                    b.ToTable("Subscription");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Entrydate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdClient = 1,
                            IdFormula = 3,
                            Sortdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Entrydate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdClient = 2,
                            IdFormula = 4,
                            Sortdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("FITNESSGYM.Models.TrainingProgram", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Calories")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Duration")
                        .HasColumnType("int");

                    b.Property<int>("Intensity")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TrainingProgram");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Calories = 400,
                            Description = "De la chorégraphie, toujours et encore pour vous faire bouger sur des rythmes endiablés. De la salsa au merengue, en passant par la cumbia, le reggaeton, le kuduro… De la variété plus qu’il n’en faut au sein d’un Group training aussi efficace qu’amusant.\r\n\r\n",
                            Duration = 45,
                            Intensity = 1,
                            Name = "Zumba",
                            Photo = "/Assets/Images/TrainingProgram/ZUMBA.jpg"
                        },
                        new
                        {
                            Id = 2,
                            Calories = 400,
                            Description = "Fruit de la rencontre entre le step et le Body Pump, le Body Sculpt vous aide à redessiner votre silhouette. Elastiques, haltères et bâtons sont les accessoires-clés pour parvenir à cet objectif, dans le cadre d’un Group training complet et accessible à tous.",
                            Duration = 45,
                            Intensity = 2,
                            Name = "Body Sculpt",
                            Photo = "/Assets/Images/TrainingProgram/BODY-SCULPT.jpg"
                        },
                        new
                        {
                            Id = 3,
                            Calories = 750,
                            Description = "Fentes, squats, jumping jacks : plongez au cœur du Body Attack ! La dynamique de groupe vous donnera une énergie incroyable pour réaliser un entraînement de haute intensité. On y retrouve des mouvements athlétiques comme la course, les flexions ou les sauts, qui sont combinés à des exercices de renforcement comme les pompes. Chorégraphies et musiques donneront du rythme à vos fractionnés, pour une endurance décuplée..",
                            Duration = 45,
                            Intensity = 4,
                            Name = "Body Attack",
                            Photo = "/Assets/Images/TrainingProgram/BODY-ATTACK.jpg"
                        },
                        new
                        {
                            Id = 4,
                            Calories = 500,
                            Description = "Bienvenue au  Body Pump ! Ce Group training LesMills tonifie et renforce le corps tout entier en permettant à vos muscles de se sculpter sans prendre de volume. Les mouvements sont simples et le nombre de répétitions est élevé : le secret des muscles fins et athlétiques.",
                            Duration = 45,
                            Intensity = 3,
                            Name = "Body Pump",
                            Photo = "/Assets/Images/TrainingProgram/BODY-PUMP.jpg"
                        },
                        new
                        {
                            Id = 5,
                            Calories = 300,
                            Description = "Cours traditionnel de cuisses abdos fessiers permettant de renforcer ses muscles afin de consolider les articulations et de limiter les douleurs dorsales.",
                            Duration = 30,
                            Intensity = 3,
                            Name = "CAF",
                            Photo = "/Assets/Images/TrainingProgram/CAF.jpg"
                        },
                        new
                        {
                            Id = 6,
                            Calories = 700,
                            Description = "Le Hiit ou High Intensity Interval Training est un type d'entrainement bien connu pour son efficacité. C'est un cours où vous travaillerez principalement vos capacités cardio-vasculaires en association avec des mouvements de musculation. Le HIIT est un cours full body intense et complet qui permet aussi bien de travailler le renforcement musculaire que l'endurance, tout en se défoulant.",
                            Duration = 30,
                            Intensity = 4,
                            Name = "Hiit",
                            Photo = "/Assets/Images/TrainingProgram/HIIT.jpg"
                        },
                        new
                        {
                            Id = 7,
                            Calories = 300,
                            Description = "Prendre conscience de son corps en le musclant, c’est ce que propose le Pilates. Le pilate s’inspire de la danse, de la gymnastique et du yoga. Toute la séance est rythmée par des musiques zen et relaxantes. Tour à tour, vous alternez entre exercices d’équilibre afin de muscler la ceinture abdominale et exercices d’assouplissement, debout ou au sol, afin d’étirer les tendons et les muscles.",
                            Duration = 45,
                            Intensity = 2,
                            Name = "Pilates",
                            Photo = "/Assets/Images/TrainingProgram/PILATES.jpg"
                        },
                        new
                        {
                            Id = 8,
                            Calories = 550,
                            Description = "Initiez-vous à l’art du Step en enchaînant des chorégraphies sur et autour d’une marche à hauteur réglable, sur fond de musique rythmée. Montez, descendez, tournez : de la coordination, vous en aurez besoin à coups sûr ! Vous brûlerez aussi beaucoup de calories, quasiment sans vous en rendre compte tellement vous serez concentré sur vos mouvements !",
                            Duration = 45,
                            Intensity = 1,
                            Name = "Step",
                            Photo = "/Assets/Images/TrainingProgram/STEP.jpg"
                        },
                        new
                        {
                            Id = 9,
                            Calories = 500,
                            Description = "Ce cours est un mix entre le Yoga et le Pilates. Il permet, grâce à des étirements, de travailler sa posture, en particulier celle du dos, en étirant la colonne vertébrale et en évitant le tassement des vertèbres. Les exercices effectués pendant la séance aident à augmenter la souplesse générale du corps en assouplissant et en renforçant l'élasticité des tendons et des muscles. Cela permet également de retrouver une silhouette affinée et plus harmonieuse.",
                            Duration = 60,
                            Intensity = 1,
                            Name = "Stretch",
                            Photo = "/Assets/Images/TrainingProgram/STRETCH.jpg"
                        },
                        new
                        {
                            Id = 10,
                            Calories = 400,
                            Description = "Entre dynamisme et calme, ce cours permet de gagner en force et en souplesse tout en respirant. Allez un peu plus loin chaque jour tout en respectant votre corps, en laissant frustration et égo de côté. Ressentez les postures du flow plutôt que d'essayer de dépasser vos limites. En apprenant à écouter son corps, on se connecte plus à son mental, pour plus de maîtrise de soi.",
                            Duration = 60,
                            Intensity = 2,
                            Name = "Yoga",
                            Photo = "/Assets/Images/TrainingProgram/YOGA.jpg"
                        });
                });

            modelBuilder.Entity("FITNESSGYM.Models.Coach", b =>
                {
                    b.HasOne("FITNESSGYM.Models.Speciality", "Speciality")
                        .WithMany()
                        .HasForeignKey("IdSpeciality");

                    b.Navigation("Speciality");
                });

            modelBuilder.Entity("FITNESSGYM.Models.FavoriteCoach", b =>
                {
                    b.HasOne("FITNESSGYM.Models.Client", "Client")
                        .WithMany("FavoriteCoach")
                        .HasForeignKey("IdClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FITNESSGYM.Models.Coach", "Coach")
                        .WithMany()
                        .HasForeignKey("IdCoach")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Coach");
                });

            modelBuilder.Entity("FITNESSGYM.Models.FavoriteExercise", b =>
                {
                    b.HasOne("FITNESSGYM.Models.Client", "Client")
                        .WithMany("FavoriteExercice")
                        .HasForeignKey("IdClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FITNESSGYM.Models.Exercise", "Exercise")
                        .WithMany()
                        .HasForeignKey("IdExercise")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Exercise");
                });

            modelBuilder.Entity("FITNESSGYM.Models.FavoriteLocation", b =>
                {
                    b.HasOne("FITNESSGYM.Models.Client", "Client")
                        .WithMany("FavoriteLocation")
                        .HasForeignKey("IdClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FITNESSGYM.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("IdLocation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("FITNESSGYM.Models.FavoriteTrainingProgram", b =>
                {
                    b.HasOne("FITNESSGYM.Models.Client", "Client")
                        .WithMany("FavoriteTrainingProgram")
                        .HasForeignKey("IdClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FITNESSGYM.Models.TrainingProgram", "TrainingProgram")
                        .WithMany()
                        .HasForeignKey("IdTrainingProgram")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("TrainingProgram");
                });

            modelBuilder.Entity("FITNESSGYM.Models.Goal", b =>
                {
                    b.HasOne("FITNESSGYM.Models.Client", "Client")
                        .WithMany("Goal")
                        .HasForeignKey("IdClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("FITNESSGYM.Models.IndividualProgram", b =>
                {
                    b.HasOne("FITNESSGYM.Models.Exercise", "Exercise")
                        .WithMany("IndividualPrograms")
                        .HasForeignKey("IdExercise")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FITNESSGYM.Models.TrainingProgram", "TrainingProgram")
                        .WithMany()
                        .HasForeignKey("IdTrainingProgram")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("TrainingProgram");
                });

            modelBuilder.Entity("FITNESSGYM.Models.MachineLocation", b =>
                {
                    b.HasOne("FITNESSGYM.Models.Location", "Location")
                        .WithMany("MachineLocation")
                        .HasForeignKey("IdLocation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FITNESSGYM.Models.Machine", "Machine")
                        .WithMany("MachineLocations")
                        .HasForeignKey("IdMachine")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");

                    b.Navigation("Machine");
                });

            modelBuilder.Entity("FITNESSGYM.Models.Reservation", b =>
                {
                    b.HasOne("FITNESSGYM.Models.Client", "Client")
                        .WithMany("Reservation")
                        .HasForeignKey("IdClient");

                    b.HasOne("FITNESSGYM.Models.Session", "Session")
                        .WithMany("Reservations")
                        .HasForeignKey("IdSession");

                    b.Navigation("Client");

                    b.Navigation("Session");
                });

            modelBuilder.Entity("FITNESSGYM.Models.Session", b =>
                {
                    b.HasOne("FITNESSGYM.Models.Coach", "Coach")
                        .WithMany()
                        .HasForeignKey("IdCoach");

                    b.HasOne("FITNESSGYM.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("IdLocation");

                    b.HasOne("FITNESSGYM.Models.TrainingProgram", "TrainingProgram")
                        .WithMany("Sessions")
                        .HasForeignKey("IdTrainingProgram");

                    b.Navigation("Coach");

                    b.Navigation("Location");

                    b.Navigation("TrainingProgram");
                });

            modelBuilder.Entity("FITNESSGYM.Models.Subscription", b =>
                {
                    b.HasOne("FITNESSGYM.Models.Client", "Client")
                        .WithMany("Subscriptions")
                        .HasForeignKey("IdClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FITNESSGYM.Models.Formula", "Formula")
                        .WithMany()
                        .HasForeignKey("IdFormula")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Formula");
                });

            modelBuilder.Entity("FITNESSGYM.Models.Client", b =>
                {
                    b.Navigation("FavoriteCoach");

                    b.Navigation("FavoriteExercice");

                    b.Navigation("FavoriteLocation");

                    b.Navigation("FavoriteTrainingProgram");

                    b.Navigation("Goal");

                    b.Navigation("Reservation");

                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("FITNESSGYM.Models.Exercise", b =>
                {
                    b.Navigation("IndividualPrograms");
                });

            modelBuilder.Entity("FITNESSGYM.Models.Location", b =>
                {
                    b.Navigation("MachineLocation");
                });

            modelBuilder.Entity("FITNESSGYM.Models.Machine", b =>
                {
                    b.Navigation("MachineLocations");
                });

            modelBuilder.Entity("FITNESSGYM.Models.Session", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("FITNESSGYM.Models.TrainingProgram", b =>
                {
                    b.Navigation("Sessions");
                });
#pragma warning restore 612, 618
        }
    }
}
