// <auto-generated />
using System;
using FITNESSGYM.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FITNESSGYM.Migrations.FITNESSGYMDB
{
    [DbContext(typeof(FITNESSGYMDBContext))]
    partial class FITNESSGYMDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FITNESSGYM.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Cancelled")
                        .HasColumnType("int");

                    b.Property<int?>("IdSession")
                        .HasColumnType("int");

                    b.Property<string>("IdUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdSession");

                    b.ToTable("Reservation");
                });

            modelBuilder.Entity("FITNESSGYM.Models.Session", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("FormulaRank")
                        .HasColumnType("int");

                    b.Property<int?>("IdCoach")
                        .HasColumnType("int");

                    b.Property<int?>("IdLocation")
                        .HasColumnType("int");

                    b.Property<int?>("IdTrainingProgram")
                        .HasColumnType("int");

                    b.Property<int?>("MaxParticipants")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SessionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SessionHour")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdTrainingProgram");

                    b.ToTable("Session");
                });

            modelBuilder.Entity("FITNESSGYM.Models.TrainingProgram", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Calories")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Duration")
                        .HasColumnType("int");

                    b.Property<int>("Intensity")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TrainingProgram");
                });

            modelBuilder.Entity("FITNESSGYM.Models.Reservation", b =>
                {
                    b.HasOne("FITNESSGYM.Models.Session", "Session")
                        .WithMany("Reservations")
                        .HasForeignKey("IdSession");

                    b.Navigation("Session");
                });

            modelBuilder.Entity("FITNESSGYM.Models.Session", b =>
                {
                    b.HasOne("FITNESSGYM.Models.TrainingProgram", "TrainingProgram")
                        .WithMany("Sessions")
                        .HasForeignKey("IdTrainingProgram");

                    b.Navigation("TrainingProgram");
                });

            modelBuilder.Entity("FITNESSGYM.Models.Session", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("FITNESSGYM.Models.TrainingProgram", b =>
                {
                    b.Navigation("Sessions");
                });
#pragma warning restore 612, 618
        }
    }
}
